{"ast":null,"code":"var _jsxFileName = \"/home/kareem/github-repos/JoKa_Movies_Client/src/components/PasswordField.jsx\",\n  _s = $RefreshSig$();\nimport TextField from \"@mui/material/TextField\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Visibility from \"@mui/icons-material/Visibility\";\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\nimport Lock from \"@mui/icons-material/Lock\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet PasswordField = ({\n  hint,\n  id,\n  name\n}) => {\n  _s();\n  const [showPassword, setShowPassword] = useState(false);\n  const styles = {\n    inputStyles: {\n      \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\": {\n        borderColor: \"orange\"\n      },\n      \"& .MuiInputLabel-root\": {\n        color: \"orange\"\n      },\n      \"& .transformed .MuiInputLabel-root\": {\n        color: \"orange !important\"\n      },\n      \"& .MuiInputLabel-root.Mui-focused\": {\n        color: \"orange !important\"\n      }\n    }\n  };\n  const handleShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n  return /*#__PURE__*/_jsxDEV(TextField, {\n    label: hint,\n    type: showPassword ? \"text\" : \"password\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    id: id,\n    name: name,\n    sx: styles.inputStyles,\n    InputProps: {\n      startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n        position: \"start\",\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          sx: {\n            color: \"orange\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Lock, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), \"  \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this),\n      endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n        position: \"end\",\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleShowPassword,\n          children: showPassword ? /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Visibility, {\n            sx: {\n              color: \"orange\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(PasswordField, \"daguiRHWMFkqPgCh/ppD7CF5VuQ=\");\n_c = PasswordField;\nexport default PasswordField;\nvar _c;\n$RefreshReg$(_c, \"PasswordField\");","map":{"version":3,"names":["TextField","InputAdornment","IconButton","Visibility","VisibilityOff","Lock","useState","jsxDEV","_jsxDEV","PasswordField","hint","id","name","_s","showPassword","setShowPassword","styles","inputStyles","borderColor","color","handleShowPassword","label","type","margin","required","fullWidth","sx","InputProps","startAdornment","position","children","fileName","_jsxFileName","lineNumber","columnNumber","endAdornment","onClick","_c","$RefreshReg$"],"sources":["/home/kareem/github-repos/JoKa_Movies_Client/src/components/PasswordField.jsx"],"sourcesContent":["import TextField from \"@mui/material/TextField\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Visibility from \"@mui/icons-material/Visibility\";\r\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\r\nimport Lock from  \"@mui/icons-material/Lock\";\r\nimport { useState } from \"react\";\r\n\r\nlet PasswordField = ({ hint, id, name }) => {\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const styles = {\r\n    inputStyles: {\r\n      \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n        borderColor: \"orange\",\r\n      },\r\n      \"& .MuiInputLabel-root\": {\r\n        color: \"orange\",\r\n      },\r\n      \"& .transformed .MuiInputLabel-root\": {\r\n        color: \"orange !important\",\r\n      },\r\n      \"& .MuiInputLabel-root.Mui-focused\": {\r\n        color: \"orange !important\",\r\n      },\r\n    },\r\n  };\r\n\r\n  const handleShowPassword = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  return (\r\n    <TextField\r\n      label={hint}\r\n      type={showPassword ? \"text\" : \"password\"}\r\n      margin=\"normal\"\r\n      required\r\n      fullWidth\r\n      id={id}\r\n      name={name}\r\n      sx={styles.inputStyles}\r\n      InputProps={{\r\n        startAdornment: (\r\n          <InputAdornment position=\"start\">\r\n            <IconButton\r\n              sx={{\r\n                color: \"orange\",\r\n              }}\r\n            >\r\n              <Lock />\r\n              {\"  \"}\r\n            </IconButton>\r\n          </InputAdornment>\r\n        ),\r\n        endAdornment: (\r\n          <InputAdornment position=\"end\">\r\n            <IconButton onClick={handleShowPassword}>\r\n              {showPassword ? (\r\n                <VisibilityOff />\r\n              ) : (\r\n                <Visibility sx={{ color: \"orange\" }} />\r\n              )}\r\n            </IconButton>\r\n          </InputAdornment>\r\n        ),\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PasswordField;\r\n"],"mappings":";;AAAA,OAAOA,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,cAAc,MAAM,8BAA8B;AACzD,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,UAAU,MAAM,gCAAgC;AACvD,OAAOC,aAAa,MAAM,mCAAmC;AAC7D,OAAOC,IAAI,MAAO,0BAA0B;AAC5C,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,IAAIC,aAAa,GAAGA,CAAC;EAAEC,IAAI;EAAEC,EAAE;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAMU,MAAM,GAAG;IACbC,WAAW,EAAE;MACX,uEAAuE,EAAE;QACvEC,WAAW,EAAE;MACf,CAAC;MACD,uBAAuB,EAAE;QACvBC,KAAK,EAAE;MACT,CAAC;MACD,oCAAoC,EAAE;QACpCA,KAAK,EAAE;MACT,CAAC;MACD,mCAAmC,EAAE;QACnCA,KAAK,EAAE;MACT;IACF;EACF,CAAC;EAED,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;IAC/BL,eAAe,CAAC,CAACD,YAAY,CAAC;EAChC,CAAC;EAED,oBACEN,OAAA,CAACR,SAAS;IACRqB,KAAK,EAAEX,IAAK;IACZY,IAAI,EAAER,YAAY,GAAG,MAAM,GAAG,UAAW;IACzCS,MAAM,EAAC,QAAQ;IACfC,QAAQ;IACRC,SAAS;IACTd,EAAE,EAAEA,EAAG;IACPC,IAAI,EAAEA,IAAK;IACXc,EAAE,EAAEV,MAAM,CAACC,WAAY;IACvBU,UAAU,EAAE;MACVC,cAAc,eACZpB,OAAA,CAACP,cAAc;QAAC4B,QAAQ,EAAC,OAAO;QAAAC,QAAA,eAC9BtB,OAAA,CAACN,UAAU;UACTwB,EAAE,EAAE;YACFP,KAAK,EAAE;UACT,CAAE;UAAAW,QAAA,gBAEFtB,OAAA,CAACH,IAAI;YAAA0B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,EACP,IAAI;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACK;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CACjB;MACDC,YAAY,eACV3B,OAAA,CAACP,cAAc;QAAC4B,QAAQ,EAAC,KAAK;QAAAC,QAAA,eAC5BtB,OAAA,CAACN,UAAU;UAACkC,OAAO,EAAEhB,kBAAmB;UAAAU,QAAA,EACrChB,YAAY,gBACXN,OAAA,CAACJ,aAAa;YAAA2B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,gBAEjB1B,OAAA,CAACL,UAAU;YAACuB,EAAE,EAAE;cAAEP,KAAK,EAAE;YAAS;UAAE;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QACvC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACS;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAEpB;EAAE;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEN,CAAC;AAACrB,EAAA,CA5DEJ,aAAa;AAAA4B,EAAA,GAAb5B,aAAa;AA8DjB,eAAeA,aAAa;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}